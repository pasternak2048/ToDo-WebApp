@using ToDo_App.Models.Abstractions
@using ToDo_App.Enums;
@model IndexViewModel<ToDo>

@{
    ViewData["Title"] = "Index";
}

<h1>ToDos</h1>

<p>
    <a asp-action="Create" asp-route-page="@Model.PageViewModel.PageNumber" class="btn btn-success">Create New</a>
    @if (ViewBag.FilterStatus != ToDoFilter.OnlyOpenTasks)
    {
        <a asp-action="Index" asp-route-filterOrder="@ViewBag.FilterStatus" asp-route-page="@Model.PageViewModel.PageNumber" class="btn btn-primary">Show all</a>
    }
    else
    {
        <a asp-action="Index" asp-route-filterOrder="@ViewBag.FilterStatus" asp-route-page="@Model.PageViewModel.PageNumber" class="btn btn-primary">Show only opened</a>
    }
</p>

<form asp-action="Index" asp-route-filterOrder="@ToDoFilter.AllTasks">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["SearchFilter"]" />
            <input type="submit" value="Search" class="btn btn-outline-primary"/> |
            <a asp-action="Index" class="btn btn-primary">Back to Full List</a>
        </p>
    </div>
</form>



<table class="table">
    <thead>
        <tr>
            @if (User.IsInRole("admin"))
            {
                <th>
                    User Email
                </th>
            }
            <th>
                Task Name
            </th>
            <th>
                @{ViewBag.FilterStatus = ViewBag.FilterStatus == ToDoFilter.OnlyOpenTasks ? ToDoFilter.AllTasks : ToDoFilter.OnlyOpenTasks;}
                <a asp-action="Index" 
                   asp-route-sortOrder="@ViewBag.DeadlineSort" 
                   asp-route-filterOrder="@ViewBag.FilterStatus"
                   asp-route-page="@Model.PageViewModel.PageNumber">
                    Deadline
                </a>
            </th>
            <th>
                Is completed
            </th>
            <th>
                Actions
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                @if (User.IsInRole("admin"))
                {
                    <td>
                        <a asp-controller="Users"
                           asp-action="Details"
                           asp-route-id="@item.User.Id"
                           class="btn">@Html.DisplayFor(modelItem => item.User.Email)</a>
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.TaskName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deadline)
                </td>
                <td>
                    <a asp-action="MarkAsComplete" asp-route-id="@item.Id"
                       asp-route-page="@Model.PageViewModel.PageNumber"
                       asp-route-filterOrder="@ViewBag.FilterStatus"
                       asp-route-sortOrder="@ViewBag.DeadlineSort" class="btn bg-transparent">@Html.DisplayFor(modelItem => item.IsCompleted)</a>
                </td>
                <td>
                    <a asp-action="Edit" 
                       asp-route-page="@Model.PageViewModel.PageNumber" 
                       asp-route-id="@item.Id"
                       asp-route-filterOrder="@ViewBag.FilterStatus"
                       class="btn btn-outline-primary">Edit</a>

                    <a asp-action="Details" asp-route-page="@Model.PageViewModel.PageNumber"
                       asp-route-id="@item.Id"
                       asp-route-filterOrder="@ViewBag.FilterStatus"
                       class="btn btn-outline-primary">Details</a>

                    <a asp-action="Delete" asp-route-page="@Model.PageViewModel.PageNumber"
                       asp-route-id="@item.Id"
                       asp-route-filterOrder="@ViewBag.FilterStatus"
                       class="btn btn-outline-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.PageViewModel.HasPreviousPage)
{
    
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       asp-route-filterOrder="@ViewBag.FilterStatus"
       class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Back
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       asp-route-filterOrder="@ViewBag.FilterStatus"
       class="btn btn-outline-dark">
        Next
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}

<a class="btn btn-block">@Model.PageViewModel.PageNumber</a>